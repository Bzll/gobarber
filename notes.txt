## docker
# Creating a docker to SQL with Postgres
docker run --name databases-container -e POSTGRES_PASSWORD=docker -p 5432:5432 -d postgres:11
docker ps
docker stop databases-container
docker ps -a
docker start databases-container
docker logs databases-container
docker restart $(docker ps -a -q)
docker start $(docker ps -a -q -f status=exited)
docker stop $(docker ps -q)

# Creating a docker to no-SQL with MongoDB
docker run --name nosql-databases-container -p 27017:27017 -d -t mongo
test: http://localhost:27017

# Creating a database key-value with Redis
docker run --name redis -p 6379:6379 -d redis:alpine
# if connectin 127.0.0.1 refuse, check the network that is in use to redis
docker network list
docker network nat inspect
# take the IPV4 from Redis and use it

## check ports open
netstat -ano

## template-engine mail
handlebarsjs


## yarn eslint --fix src --ext .js


## sequelize
yarn sequelize migration:create --name=plans-management
yarn sequelize db:migrate
